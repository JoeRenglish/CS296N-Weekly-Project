// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoryCreator.Data;

#nullable disable

namespace StoryCreator.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250119231122_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StoryCreator.Models.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("SignUpDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AppUserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("StoryCreator.Models.Character", b =>
                {
                    b.Property<int>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Birthday")
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("StoryId")
                        .HasColumnType("int");

                    b.HasKey("CharacterId");

                    b.HasIndex("StoryId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("StoryCreator.Models.Story", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AuthorAppUserId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Series")
                        .HasColumnType("longtext");

                    b.Property<string>("StoryText")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("StoryId");

                    b.HasIndex("AuthorAppUserId");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("StoryCreator.Models.Character", b =>
                {
                    b.HasOne("StoryCreator.Models.Story", "Story")
                        .WithMany()
                        .HasForeignKey("StoryId");

                    b.Navigation("Story");
                });

            modelBuilder.Entity("StoryCreator.Models.Story", b =>
                {
                    b.HasOne("StoryCreator.Models.AppUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorAppUserId");

                    b.Navigation("Author");
                });
#pragma warning restore 612, 618
        }
    }
}
